{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\CDAC\\\\Desktop\\\\Project_X_Complete (1)\\\\frontend-app\\\\src\\\\components\\\\ReportView.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ReportView() {\n  _s();\n  const {\n    scanId\n  } = useParams();\n  const [reportUrl, setReportUrl] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n  const username = localStorage.getItem(\"username\");\n  useEffect(() => {\n    if (!username) {\n      navigate(\"/login\");\n      return;\n    }\n    const fetchReport = async () => {\n      try {\n        const response = await axios.get(`http://127.0.0.1:8000/report/${scanId}`, {\n          responseType: \"blob\",\n          headers: {\n            username: username\n          }\n        });\n        const file = new Blob([response.data], {\n          type: \"application/pdf\"\n        });\n        const fileURL = URL.createObjectURL(file);\n        setReportUrl(fileURL);\n      } catch (err) {\n        console.error(\"Error fetching report:\", err);\n        setError(\"Could not load report.\");\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReport();\n  }, [scanId, username, navigate]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"p-6 text-white\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-semibold mb-4\",\n      children: \"Scan Report\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-300\",\n      children: \"Loading report...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this) : error ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-400\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"iframe\", {\n      src: reportUrl,\n      title: \"PDF Report\",\n      width: \"100%\",\n      height: \"700px\",\n      className: \"rounded border border-gray-500\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(ReportView, \"pycFJGWkgHGrjtIWUmJ++3EutBY=\", false, function () {\n  return [useParams, useNavigate];\n});\n_c = ReportView;\nexport default ReportView;\nvar _c;\n$RefreshReg$(_c, \"ReportView\");","map":{"version":3,"names":["React","useState","useEffect","useParams","useNavigate","axios","jsxDEV","_jsxDEV","ReportView","_s","scanId","reportUrl","setReportUrl","loading","setLoading","error","setError","navigate","username","localStorage","getItem","fetchReport","response","get","responseType","headers","file","Blob","data","type","fileURL","URL","createObjectURL","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","src","title","width","height","_c","$RefreshReg$"],"sources":["C:/Users/CDAC/Desktop/Project_X_Complete (1)/frontend-app/src/components/ReportView.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useParams, useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction ReportView() {\r\n  const { scanId } = useParams();\r\n  const [reportUrl, setReportUrl] = useState(\"\");\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const username = localStorage.getItem(\"username\");\r\n\r\n  useEffect(() => {\r\n    if (!username) {\r\n      navigate(\"/login\");\r\n      return;\r\n    }\r\n\r\n    const fetchReport = async () => {\r\n      try {\r\n        const response = await axios.get(\r\n          `http://127.0.0.1:8000/report/${scanId}`,\r\n          {\r\n            responseType: \"blob\",\r\n            headers: {\r\n              username: username,\r\n            },\r\n          }\r\n        );\r\n        const file = new Blob([response.data], { type: \"application/pdf\" });\r\n        const fileURL = URL.createObjectURL(file);\r\n        setReportUrl(fileURL);\r\n      } catch (err) {\r\n        console.error(\"Error fetching report:\", err);\r\n        setError(\"Could not load report.\");\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchReport();\r\n  }, [scanId, username, navigate]);\r\n\r\n  return (\r\n    <div className=\"p-6 text-white\">\r\n      <h2 className=\"text-2xl font-semibold mb-4\">Scan Report</h2>\r\n      {loading ? (\r\n        <p className=\"text-gray-300\">Loading report...</p>\r\n      ) : error ? (\r\n        <p className=\"text-red-400\">{error}</p>\r\n      ) : (\r\n        <iframe\r\n          src={reportUrl}\r\n          title=\"PDF Report\"\r\n          width=\"100%\"\r\n          height=\"700px\"\r\n          className=\"rounded border border-gray-500\"\r\n        ></iframe>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ReportView;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}